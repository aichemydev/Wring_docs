"use strict";(self.webpackChunktest_gold=self.webpackChunktest_gold||[]).push([[2335],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return h}});var i=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=i.createContext({}),p=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=p(e.components);return i.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},u=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(t),h=a,g=u["".concat(s,".").concat(h)]||u[h]||c[h]||r;return t?i.createElement(g,o(o({ref:n},d),{},{components:t})):i.createElement(g,o({ref:n},d))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,o=new Array(r);o[0]=u;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<r;p++)o[p]=t[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6391:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d}});var i=t(7462),a=t(3366),r=(t(7294),t(3905)),o=["components"],l={sidebar_position:3},s="Capture Android Events",p={unversionedId:"tutorial-extras/wring-android",id:"tutorial-extras/wring-android",isDocsHomePage:!1,title:"Capture Android Events",description:"The wringandroid library for Android allows you to capture user interaction",source:"@site/docs/tutorial-extras/wring-android.md",sourceDirName:"tutorial-extras",slug:"/tutorial-extras/wring-android",permalink:"/Wring_docs/docs/tutorial-extras/wring-android",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Customizing Interceptor Execution",permalink:"/Wring_docs/docs/tutorial-extras/customizing-interceptor"},next:{title:"Selenium JS Examples",permalink:"/Wring_docs/docs/Examples/Selenium-JS"}},d=[{value:"Installing the library package",id:"installing-the-library-package",children:[],level:2},{value:"Using the library package in Java apps",id:"using-the-library-package-in-java-apps",children:[{value:"API key and URLs",id:"api-key-and-urls",children:[],level:3},{value:"Initializing the library",id:"initializing-the-library",children:[],level:3},{value:"Capturing events",id:"capturing-events",children:[],level:3}],level:2},{value:"Viewing screenshots",id:"viewing-screenshots",children:[],level:2},{value:"Using the library package in Kotlin apps",id:"using-the-library-package-in-kotlin-apps",children:[],level:2},{value:"Examples",id:"examples",children:[{value:"Java",id:"java",children:[],level:3},{value:"Kotlin",id:"kotlin",children:[],level:3}],level:2}],c={toc:d};function u(e){var n=e.components,l=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,i.Z)({},c,l,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"capture-android-events"},"Capture Android Events"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"wringandroid")," library for Android allows you to capture user interaction\nevents in your Android app. This library is provided as an Android AAR package,\nwhich can be incorporated into your app and then configured to send events to\nthe Wring API. The Wring dashboard can then be used to visualize these events\nand track users' journeys through your app with screenshots taken at the point\nof event capture."),(0,r.kt)("h2",{id:"installing-the-library-package"},"Installing the library package"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"wringandroid")," library is available from the Wring Maven repository at\n",(0,r.kt)("a",{parentName:"p",href:"https://repo.wring.dev."},"https://repo.wring.dev.")," To install this library in your app, update your Android\nproject's root ",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle")," file to include the Wring Maven repository:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"repositories {\n    ...\n    maven {\n        url 'https://repo.wring.dev/repository/maven-releases/'\n    }\n}\n")),(0,r.kt)("p",null,"Then, add the dependency to your app module's ",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle")," file's\n",(0,r.kt)("inlineCode",{parentName:"p"},"dependencies")," block."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"dependencies {\n    ...\n    implementation 'dev.wring:wringandroid:1.1.0'\n}\n")),(0,r.kt)("p",null,"In Android Studio, synchronize the Gradle project after editing these two files.\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"wringandroid")," library will then be ready to use in your app project."),(0,r.kt)("h2",{id:"using-the-library-package-in-java-apps"},"Using the library package in Java apps"),(0,r.kt)("h3",{id:"api-key-and-urls"},"API key and URLs"),(0,r.kt)("p",null,"To connect the ",(0,r.kt)("inlineCode",{parentName:"p"},"wringandroid")," library to the Wring API, you will need a project\ntoken, as well as the URLs for the Wring event and screenshot ingestion\nservices. Setting these up as resources in your app or static constants in your\nAndroid main activity source file is recommended. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'package com.company.yourapp;\n\nimport android.app.Activity;\n\npublic class MainActivity extends Activity {\n\n  private static final String WRING_EVENTS_URL = "https://wes.wring.dev";\n  private static final String WRING_SCREENSHOTS_URL = "https://app.wring.dev/interceptor/pageviews";\n  private static final String WRING_API_KEY = "phc_XXXXYYYYZZZZ";\n  // ...\n}\n')),(0,r.kt)("p",null,"You may obtain the ",(0,r.kt)("inlineCode",{parentName:"p"},"WRING_API_KEY")," from the Wring dashboard by setting up a new\nLive Events project or reusing an existing one."),(0,r.kt)("p",null,"To create a new Live Events project dedicated to events from your Android app,\nclick on ",(0,r.kt)("strong",{parentName:"p"},"Live Events")," in the left sidebar, then Click on ",(0,r.kt)("strong",{parentName:"p"},"Add new project"),".\nFill in the form that appears. You will then receive an ",(0,r.kt)("strong",{parentName:"p"},"API key"),", which can\nbe used as the value of ",(0,r.kt)("inlineCode",{parentName:"p"},"WRING_API_KEY"),"."),(0,r.kt)("p",null,"To use an existing Live Events project, click on the ",(0,r.kt)("strong",{parentName:"p"},"Project details")," button\nfor the project in the list that appears after navigating to ",(0,r.kt)("strong",{parentName:"p"},"Live Events")," in\nthe Wring dashboard. In the dialog box that appears, copy the value of ",(0,r.kt)("strong",{parentName:"p"},"API\nKEY")," and use it for the value of ",(0,r.kt)("inlineCode",{parentName:"p"},"WRING_API_KEY"),"."),(0,r.kt)("h3",{id:"initializing-the-library"},"Initializing the library"),(0,r.kt)("p",null,"Initialize the ",(0,r.kt)("inlineCode",{parentName:"p"},"wringandroid")," library in your main ",(0,r.kt)("inlineCode",{parentName:"p"},"Activity")," class or\n",(0,r.kt)("inlineCode",{parentName:"p"},"Application")," class. This involves importing the ",(0,r.kt)("inlineCode",{parentName:"p"},"dev.wring.wringandroid"),"\npackage and then creating a singleton instance of the ",(0,r.kt)("inlineCode",{parentName:"p"},"WringAndroid")," class. The\nexample below shows how this is done for an app using a ",(0,r.kt)("inlineCode",{parentName:"p"},"MainActivity")," class."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'package com.company.yourapp;\n\nimport android.app.Activity;\nimport android.os.Bundle;\n\n// import the class from the package\nimport dev.wring.wringandroid.WringAndroid;\n\npublic class MainActivity extends Activity {\n\n  // variable used to hold the singleton instance\n  WringAndroid wring;\n\n  // required items to set up the WringAndroid singleton instance\n  private static final String WRING_EVENTS_URL = "https://wes.wring.dev";\n  private static final String WRING_SCREENSHOTS_URL = "https://app.wring.dev/interceptor/pageviews";\n  private static final String WRING_API_KEY = "phc_XXXXYYYYZZZZ";\n\n  protected void onCreate(Bundle savedInstanceState) {\n\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.main_activity);\n\n    // set up the instance\n    WringAndroid.Builder builder = new WringAndroid.Builder(\n      this,\n      WRING_API_KEY,\n      WRING_EVENTS_URL,\n      WRING_SCREENSHOTS_URL\n    );\n    WringAndroid.setSingletonInstance(builder.build());\n\n    // ...\n\n  }\n\n}\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"WringAndroid")," now contains a singleton instance of the class, which can be\nreused in other activity classes by importing\n",(0,r.kt)("inlineCode",{parentName:"p"},"dev.wring.wringandroid.WringAndroid")," and using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"WringAndroid wring = WringAndroid.with(this);\n")),(0,r.kt)("p",null,"where ",(0,r.kt)("inlineCode",{parentName:"p"},"this")," refers to the current context (in this case, an Android\n",(0,r.kt)("inlineCode",{parentName:"p"},"Activity"),"). All event capture methods are made available from the ",(0,r.kt)("inlineCode",{parentName:"p"},"wring"),"\ninstance."),(0,r.kt)("h3",{id:"capturing-events"},"Capturing events"),(0,r.kt)("p",null,"To capture an event with an associated screenshot, use the\n",(0,r.kt)("inlineCode",{parentName:"p"},"WringAndroid.captureScr()")," method in your interaction handler method. Make sure\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"WringAndroid")," singleton has been made available in your source file first."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"captureScr()")," method takes the following arguments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"String ",(0,r.kt)("inlineCode",{parentName:"li"},"eventName"),": this describes the event that is being captured"),(0,r.kt)("li",{parentName:"ul"},"Activity ",(0,r.kt)("inlineCode",{parentName:"li"},"targetActivity"),": the instance of the ",(0,r.kt)("inlineCode",{parentName:"li"},"Activity")," that the action is\nbeing captured from"),(0,r.kt)("li",{parentName:"ul"},"View ",(0,r.kt)("inlineCode",{parentName:"li"},"targetView"),": the instance of the ",(0,r.kt)("inlineCode",{parentName:"li"},"View")," that the action is being\ncaptured from")),(0,r.kt)("p",null,"To mask out sensitive information on the screenshot of the app view, for\nexample: SSNs, secrets, or PINs, call the ",(0,r.kt)("inlineCode",{parentName:"p"},"WringAndroid.captureScr()")," method\nwith the following arguments:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"String ",(0,r.kt)("inlineCode",{parentName:"li"},"eventName"),": this describes the event that is being captured"),(0,r.kt)("li",{parentName:"ul"},"Activity ",(0,r.kt)("inlineCode",{parentName:"li"},"targetActivity"),": the instance of the ",(0,r.kt)("inlineCode",{parentName:"li"},"Activity")," that the action is\nbeing captured from"),(0,r.kt)("li",{parentName:"ul"},"View ",(0,r.kt)("inlineCode",{parentName:"li"},"targetView"),": the instance of the ",(0,r.kt)("inlineCode",{parentName:"li"},"View")," that the action is being\ncaptured from"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"censorElementIds"),": Array of integer view IDs to mask out on the screenshot\n(e.g. an array of ",(0,r.kt)("inlineCode",{parentName:"li"},"[R.id.a_textview_id, R.id.another_textview_id]"),")")),(0,r.kt)("p",null,"The example below shows how to capture a button click:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'package com.company.yourapp;\n\nimport android.app.Activity;\nimport android.os.Bundle;\nimport android.view.View;\nimport android.widget.Button;\nimport android.app.AlertDialog;\n\n// import the class from the package\nimport dev.wring.wringandroid.WringAndroid;\n\npublic class ButtonClickActivity extends Activity {\n\n  WringAndroid wring;\n\n  protected void onCreate(Bundle savedInstanceState) {\n\n    // get the already instantiated singleton class\n    wring = WringAndroid.with(this);\n\n    // set up the activity UI from the resources\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.button_click_activity);\n\n    Button targetButton = (Button) findViewById(R.id.targetButton);\n\n    // set up the handler for the click action\n    targetButton.setOnClickListener(new View.OnClickListener() {\n\n      @Override\n      public void onClick(View view) {\n\n        // capture the click event with a screenshot\n        wring.captureScr("target button clicked", ButtonClickActivity.this, view);\n\n        // handle the button click itself\n        handleTargetButtonClicked(view);\n      }\n    });\n\n    // the click handler -- this shows an alert dialog when the button is clicked\n    private void handleTargetButtonClicked(View view) {\n      final AlertDialog alertDialog = new AlertDialog.Builder(c).create();\n      alertDialog.setTitle("Clicked the button!");\n      alertDialog.setMessage("Clicked the button!");\n      alertDialog.setButton(AlertDialog.BUTTON_POSITIVE, "OK", new DialogInterface.OnClickListener() {\n        public void onClick(DialogInterface dialog, int which) {\n          alertDialog.hide();\n        }\n      });\n      alertDialog.show();\n    }\n\n  }\n\n}\n')),(0,r.kt)("h2",{id:"viewing-screenshots"},"Viewing screenshots"),(0,r.kt)("p",null,"We recommend making a new ",(0,r.kt)("strong",{parentName:"p"},"Live Events")," project specifically for mobile\nevents. Once events have been captured using the API key for this project, they\nmay be viewed in the Wring dashboard by navigating to ",(0,r.kt)("strong",{parentName:"p"},"Live Events"),", then\nclicking on the project in the list that appears."),(0,r.kt)("p",null,"The dashboard will then show a list of mobile sessions that have been captured."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"list of mobile sessions",src:t(7229).Z})),(0,r.kt)("p",null,"Click on a session in this list to bring up the screenshot viewer."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"screenshot events viewer",src:t(1518).Z})),(0,r.kt)("h2",{id:"using-the-library-package-in-kotlin-apps"},"Using the library package in Kotlin apps"),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Instructions for using the ",(0,r.kt)("inlineCode",{parentName:"p"},"wringandroid")," library with Kotlin  will be added shortly..."))),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("h3",{id:"java"},"Java"),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"An example Java app will be added shortly..."))),(0,r.kt)("h3",{id:"kotlin"},"Kotlin"),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"An example Kotlin app will be added shortly..."))))}u.isMDXComponent=!0},7229:function(e,n,t){n.Z=t.p+"assets/images/list-of-mobile-sessions-aec20706c3e32ee3e67c3cc144e49c59.png"},1518:function(e,n,t){n.Z=t.p+"assets/images/screenshot-events-viewer-b81b429096dde176c069c8c733ef072d.png"}}]);